name: Build

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]
  schedule:
    - cron:  '0 1 * * *'
  workflow_dispatch:

jobs:
  build-app:

    name: Build app
    runs-on: macos-monterey

    steps:

    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        submodules: recursive
        fetch-depth: 0

    - name: Install dependencies
      run: scripts/install-dependencies.sh

    - name: Build, test, and release
      env:

        IOS_CERTIFICATE_BASE64: ${{ secrets.IOS_CERTIFICATE_BASE64 }}
        IOS_CERTIFICATE_PASSWORD: ${{ secrets.IOS_CERTIFICATE_PASSWORD }}

        APPLE_API_KEY: ${{ secrets.APPLE_API_KEY }}
        APPLE_API_KEY_ISSUER_ID: ${{ secrets.APPLE_API_KEY_ISSUER_ID }}
        APPLE_API_KEY_ID: ${{ secrets.APPLE_API_KEY_ID }}

        APP_CONFIGURATION: ${{ secrets.APP_CONFIGURATION }}

        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

        ARCHIVE: true
        TESTFLIGHT_UPLOAD: ${{ github.ref == 'refs/heads/main' }}

      run: |
        scripts/build.sh

  build-firmware:

    name: Build firmware
    runs-on: ubuntu-latest

    steps:

    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        submodules: recursive
        fetch-depth: 0

    - name: Build
      run: |
        firmware/docker/docker-build.sh

    - name: Archive the firmware
      uses: actions/upload-artifact@v2
      with:
        name: Firmware
        path: firmware/build
